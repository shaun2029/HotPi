From a2fe11c6297f0292c66d119db024687c2de0f1aa Mon Sep 17 00:00:00 2001
From: fritsch <Peter.Fruehberger@gmail.com>
Date: Sat, 4 Apr 2015 22:35:27 +0200
Subject: [PATCH 1/3] IMX: Warn once when frames are received but VPU detects
 interlaced content

---
 .../dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp    | 19 +++++++++++++++++--
 .../dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.h      |  1 +
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
index 4c56f51..bb100a7 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
@@ -420,6 +420,7 @@ CDVDVideoCodecIMX::CDVDVideoCodecIMX()
   m_convert_bitstream = false;
   m_bytesToBeConsumed = 0;
   m_previousPts = DVD_NOPTS_VALUE;
+  m_warnOnce = true;
 #ifdef DUMP_STREAM
   m_dump = NULL;
 #endif
@@ -1079,8 +1080,21 @@ bool CDVDVideoCodecIMX::GetPicture(DVDVideoPicture* pDvdVideoPicture)
   else
     pDvdVideoPicture->iFlags &= ~DVP_FLAG_INTERLACED;
 
-  if (m_currentBuffer->GetFieldType() != VPU_FIELD_BOTTOM && m_currentBuffer->GetFieldType() != VPU_FIELD_BT)
-    pDvdVideoPicture->iFlags |= DVP_FLAG_TOP_FIELD_FIRST;
+  // do a sanity check to not deinterlace progressive content
+  if ((pDvdVideoPicture->iFlags & DVP_FLAG_INTERLACED) && (m_currentBuffer->GetFieldType() == VPU_FIELD_NONE))
+  {
+    if (m_warnOnce)
+    {
+      m_warnOnce = false;
+      CLog::Log(LOGWARNING, "Interlaced content reported by VPU, but full frames detected - Please turn off deinterlacing manually.");
+    }
+  }
+
+  if (pDvdVideoPicture->iFlags & DVP_FLAG_INTERLACED)
+  {
+    if (m_currentBuffer->GetFieldType() != VPU_FIELD_BOTTOM && m_currentBuffer->GetFieldType() != VPU_FIELD_BT)
+      pDvdVideoPicture->iFlags |= DVP_FLAG_TOP_FIELD_FIRST;
+  }
   else
     pDvdVideoPicture->iFlags &= ~DVP_FLAG_TOP_FIELD_FIRST;
 
@@ -1278,6 +1292,7 @@ CIMXContext::CIMXContext()
   , m_fbVirtAddr(NULL)
   , m_ipuHandle(0)
   , m_vsync(true)
+  , m_deInterlacing(false)
   , m_pageCrops(NULL)
   , m_g2dHandle(NULL)
   , m_bufferCapture(NULL)
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.h b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.h
index e414454..8a39dd8 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.h
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.h
@@ -341,6 +341,7 @@ class CDVDVideoCodecIMX : public CDVDVideoCodec
   int                          m_bytesToBeConsumed; // Remaining bytes in VPU
   double                       m_previousPts;       // Enable to keep pts when needed
   bool                         m_frameReported;     // State whether the frame consumed event will be reported by libfslvpu
+  bool                         m_warnOnce;          // Track warning messages to only warn once
 #ifdef DUMP_STREAM
   FILE                        *m_dump;
 #endif

From 4cbb6189cbeb8cee51b4542f6b85ef7144ab0c12 Mon Sep 17 00:00:00 2001
From: fritsch <Peter.Fruehberger@gmail.com>
Date: Mon, 6 Apr 2015 15:02:24 +0200
Subject: [PATCH 2/3] IMX: Fix Screenshot v4

---
 xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
index bb100a7..0496c12 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/DVDVideoCodecIMX.cpp
@@ -33,6 +33,7 @@
 #include <unistd.h>
 #include <string.h>
 #include <fcntl.h>
+#include <algorithm>
 
 #define IMX_VDI_MAX_WIDTH 968
 #define FRAME_ALIGN 16
@@ -1652,8 +1653,16 @@ void CIMXContext::CaptureDisplay(unsigned char *buffer, int iWidth, int iHeight)
   }
   unsigned char *display = m_fbVirtAddr + m_fbCurrentPage*m_fbPageSize;
 
-  if (m_fbVar.nonstd != _4CC('R', 'G', 'B', '4'))
+  if (m_fbVar.nonstd == _4CC('R', 'G', 'B', '4'))
+  {
     memcpy(buffer, display, iWidth * iHeight * 4);
+    // BGRA is needed RGBA we get
+    unsigned int size = iWidth * iHeight * 4;
+    for (unsigned int i = 0; i < size; i += 4)
+    {
+       std::swap(buffer[i], buffer[i + 2]);
+    }
+  }
   else //_4CC('U', 'Y', 'V', 'Y')))
   {
     int r,g,b,a;

From 1d2908820dfe7993331a7e215e91d24f51e2cc1e Mon Sep 17 00:00:00 2001
From: fritsch <Peter.Fruehberger@gmail.com>
Date: Wed, 8 Apr 2015 21:42:50 +0200
Subject: [PATCH 3/3] EGLNativeTypeIMX: Fix boolean return (gcc5)

---
 xbmc/windowing/egl/EGLNativeTypeIMX.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/windowing/egl/EGLNativeTypeIMX.cpp b/xbmc/windowing/egl/EGLNativeTypeIMX.cpp
index c6eed8d..6ab42b1 100644
--- a/xbmc/windowing/egl/EGLNativeTypeIMX.cpp
+++ b/xbmc/windowing/egl/EGLNativeTypeIMX.cpp
@@ -53,7 +53,7 @@ CEGLNativeTypeIMX::~CEGLNativeTypeIMX()
 bool CEGLNativeTypeIMX::CheckCompatibility()
 {
   std::ifstream file("/sys/class/graphics/fb0/fsl_disp_dev_property");
-  return file;
+  return file.is_open();
 }
 
 void CEGLNativeTypeIMX::Initialize()
