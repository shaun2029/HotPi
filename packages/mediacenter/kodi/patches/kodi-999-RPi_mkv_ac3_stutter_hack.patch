--- a/xbmc/ApplicationPlayer.cpp	2015-02-23 18:05:12.000000000 +0000
+++ b/xbmc/ApplicationPlayer.cpp	2015-03-03 21:24:00.781738946 +0000
@@ -23,6 +23,17 @@
 #include "Application.h"
 #include "settings/MediaSettings.h"
 
+
+/* Hack to work around stutter on RaspberryPI when playing some 1080 H264 AC3 MKV files.
+   Start playback and then skipping back a period seems to fix the symptoms. */
+#if defined(TARGET_RASPBERRY_PI)
+#include <iostream>
+#include "utils/StreamDetails.h"
+#define STUTTER_SKIP_PERIOD 100
+static bool stutterSkip = false;
+static int64_t stutterSkipTime;
+#endif
+
 CApplicationPlayer::CApplicationPlayer()
 {
   m_iPlayerOPSeq = 0;
@@ -103,6 +114,21 @@
     // check whether the OpenFile was canceled by either CloseFile or another OpenFile.
     if (m_iPlayerOPSeq != startingSeq)
       iResult = PLAYBACK_CANCELED;
+
+    #if defined(TARGET_RASPBERRY_PI)
+    /* Hack to work around stutter on RaspberryPI when playing some 1080 H264 AC3 MKV files.
+       Start playback and then skipping back a period seems to fix the symptoms. */
+    CStreamDetails details;
+
+    if ((iResult == PLAYBACK_OK) && (player->HasVideo()) && (player->GetStreamDetails(details))) {
+      if ((details.GetAudioCodec().compare("ac3") == 0) && (details.GetVideoCodec().compare("h264") == 0) && (details.GetVideoWidth() > 1280)) {
+    	stutterSkipTime = (options.starttime * 1000) + STUTTER_SKIP_PERIOD;
+        stutterSkip = true;
+      } else {
+        stutterSkip = false;
+      }
+    }
+    #endif
   }
   return iResult;
 }
@@ -256,7 +282,21 @@
 {
   boost::shared_ptr<IPlayer> player = GetInternal();
   if (player)
+#if defined(TARGET_RASPBERRY_PI)
+  {
+    int64_t time = player->GetTime();
+
+    // Hack to work around stutter on RaspberryPI when playing some AC3 MKV files.
+    if ((stutterSkip) && (time > stutterSkipTime)) {
+      stutterSkip = false;
+      player->SeekTime(stutterSkipTime - STUTTER_SKIP_PERIOD);
+    }
+
+    return time;
+  }
+#else
     return player->GetTime();
+#endif
   else
     return 0;
 }
